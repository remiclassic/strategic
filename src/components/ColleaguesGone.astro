---
// Import any necessary components or assets
import BuyButton from './BuyButton.astro';

// Define any data or props needed for the component
const testimonials = [
  {
    icon: "üîî",
    headline: "LOVE IT? IT'S FREE",
    text: "This refund policy convinced me to try it. 5 months later.. I'm writing this from a co-work space!",
    attribution: "Rajiv C. (Former UX Lead)",
    color: "var(--comic-primary)"
  },
  {
    icon: "üìò",
    headline: "SOPHIA M. Ex-Adobe",
    text: "Seeing someone with real corporate credentials made all the difference. My PDF sales now cover my Barcelona rent!",
    attribution: "Sophia M. (Ex-Adobe Designer)",
    color: "var(--comic-secondary)"
  },
  {
    icon: "üì§",
    headline: "MARCUS T. Forme?",
    text: "Bought it on a whim during my lunch break. By Friday, I had drafted my resignation letter.",
    attribution: "Marcus T. (Former Project Manager)",
    color: "var(--comic-accent)"
  }
];

const panels = [
  {
    title: "Monday Beach Office",
    caption: "Leaving burnout...",
    image: "/images/beachoffice.png",
    soundEffect: "WHOOSH!",
    emoji: "üèñÔ∏è"
  },
  {
    title: "Wednesday Home Office",
    caption: "Getting comfortable...",
    image: "/images/homeoffice.png",
    soundEffect: "YAWN...",
    emoji: "üè°"
  },
  {
    title: "Friday Jungle Vibes",
    caption: "Fully free!",
    image: "/images/junglevibes.png",
    soundEffect: "NAP MODE",
    emoji: "üå¥"
  },
];

---

<section class="bg-yellow-200 py-16 text-center relative overflow-hidden">
  <!-- Halftone Pattern Background -->
  <div class="absolute inset-0 pointer-events-none opacity-10" style="background-image: url('data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23000' fill-opacity='1' fill-rule='evenodd'%3E%3Ccircle cx='2' cy='2' r='1'/%3E%3Ccircle cx='12' cy='12' r='1.5'/%3E%3Ccircle cx='22' cy='22' r='2'/%3E%3Ccircle cx='32' cy='32' r='1.5'/%3E%3Ccircle cx='42' cy='42' r='1'/%3E%3Ccircle cx='52' cy='52' r='0.5'/%3E%3C/g%3E%3C/svg%3E'); background-size: 60px 60px;"></div>

  <!-- Gradient Overlay -->
  <div class="absolute inset-0 pointer-events-none bg-gradient-to-b from-yellow-100/50 to-yellow-300/50"></div>

  <!-- Random Background Doodles -->
  <div class="absolute inset-0 pointer-events-none overflow-hidden">
    <!-- Sun with lazy rays -->
    <div class="absolute top-[15%] left-[10%] w-64 h-64 opacity-[0.15] animate-float-slow">
      <svg class="w-full h-full" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid meet">
        <circle cx="50" cy="50" r="20" fill="none" stroke="#FFB800" stroke-width="3" stroke-dasharray="2,2"/>
        <path d="M50,30 L50,20 M50,80 L50,90 M30,50 L20,50 M80,50 L90,50 M35,35 L25,25 M65,65 L75,75 M35,65 L25,75 M65,35 L75,25" 
              stroke="#FFB800" stroke-width="3" stroke-linecap="round"/>
      </svg>
    </div>
    
    <!-- Coffee cup -->
    <div class="absolute top-[25%] right-[15%] w-80 h-80 opacity-[0.15] animate-float-medium">
      <svg class="w-full h-full" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid meet">
        <path d="M30,40 L30,60 L40,60 L40,40 Z" fill="none" stroke="#FFB800" stroke-width="3"/>
        <path d="M25,40 L45,40" stroke="#FFB800" stroke-width="3"/>
        <path d="M35,35 Q37,30 39,35 Q41,30 43,35" fill="none" stroke="#FFB800" stroke-width="3"/>
      </svg>
    </div>
    
    <!-- Jungle leaves -->
    <div class="absolute bottom-[20%] left-[20%] w-72 h-72 opacity-[0.15] animate-float-fast">
      <svg class="w-full h-full" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid meet">
        <path d="M20,20 Q30,10 40,20 Q50,10 60,20 Q70,10 80,20" fill="none" stroke="#FFB800" stroke-width="3"/>
        <path d="M25,25 Q35,15 45,25 Q55,15 65,25 Q75,15 85,25" fill="none" stroke="#FFB800" stroke-width="3"/>
      </svg>
    </div>
    
    <!-- Small airplane -->
    <div class="absolute top-[40%] left-[30%] w-56 h-56 opacity-[0.15] animate-float-medium">
      <svg class="w-full h-full" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid meet">
        <path d="M70,30 L80,35 L70,40 L65,35 Z" fill="none" stroke="#FFB800" stroke-width="3"/>
        <path d="M75,32 L85,32" stroke="#FFB800" stroke-width="3" stroke-linecap="round"/>
      </svg>
    </div>
    
    <!-- Wi-Fi signal -->
    <div class="absolute bottom-[30%] right-[25%] w-64 h-64 opacity-[0.15] animate-float-slow">
      <svg class="w-full h-full" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid meet">
        <path d="M60,60 Q65,55 70,60 Q75,50 80,60" fill="none" stroke="#FFB800" stroke-width="3"/>
        <path d="M65,65 Q70,60 75,65" fill="none" stroke="#FFB800" stroke-width="3"/>
        <path d="M70,70 L70,70" fill="none" stroke="#FFB800" stroke-width="3"/>
      </svg>
    </div>
    
    <!-- Monkeys -->
    <div class="absolute top-[60%] right-[10%] w-48 h-48 opacity-[0.15] animate-float-fast">
      <svg class="w-full h-full" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid meet">
        <circle cx="30" cy="60" r="5" fill="none" stroke="#FFB800" stroke-width="3"/>
        <path d="M30,65 L30,70" stroke="#FFB800" stroke-width="3"/>
        <path d="M25,68 L35,68" stroke="#FFB800" stroke-width="3"/>
      </svg>
    </div>
    
    <!-- Hammock rope -->
    <div class="absolute bottom-[10%] left-[40%] w-60 h-60 opacity-[0.15] animate-float-medium">
      <svg class="w-full h-full" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid meet">
        <path d="M70,40 L80,45 L70,50" fill="none" stroke="#FFB800" stroke-width="3"/>
      </svg>
    </div>
    
    <!-- Birds -->
    <div class="absolute top-[10%] right-[40%] w-52 h-52 opacity-[0.15] animate-float-slow">
      <svg class="w-full h-full" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid meet">
        <path d="M60,30 Q65,25 70,30" fill="none" stroke="#FFB800" stroke-width="3"/>
        <path d="M65,35 Q70,30 75,35" fill="none" stroke="#FFB800" stroke-width="3"/>
      </svg>
    </div>
  </div>

  <div class="relative">
    <div class="comic-header transform hover:scale-105 transition-all duration-300 inline-block" data-scroll-animation="fade-up">
      <h2 class="text-4xl font-comic uppercase mb-2 relative">
        Your Former Colleagues Are Already Gone! 
        <span class="wave-emoji absolute -right-12 top-0">üëã</span>
      </h2>
    </div>
    <p class="mb-10 text-lg italic text-gray-800 max-w-xl mx-auto transform hover:-rotate-1 transition-all duration-300" data-scroll-animation="fade-up">
      The only thing worse than staying? Watching your former cube-mate escape first. Again. üòÖ
    </p>

    <div class="relative">
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8 px-4 max-w-6xl mx-auto mb-4" data-scroll-animation="fade-up" data-stagger>
        {panels.map((panel, index) => (
          <div class="flex flex-col panel-container" data-index={index} data-stagger-child>
            <div class="relative group">
              <div class="relative bg-white border-4 border-black rounded-lg overflow-hidden comic-panel transform hover:scale-105 transition-all duration-300 cursor-pointer">
                <div class="bg-yellow-300 p-4 text-4xl font-comic text-left flex justify-between items-center group-hover:bg-yellow-400 transition-colors duration-300">
                  <span class="sound-effect">{panel.soundEffect}</span>
                  <span class="panel-emoji transform group-hover:scale-125 transition-transform duration-300">{panel.emoji}</span>
                </div>
                <div class="relative w-full aspect-square overflow-hidden">
                  <img 
                    src={panel.image} 
                    alt={panel.title} 
                    class="absolute inset-0 w-full h-full object-cover transform group-hover:scale-110 transition-transform duration-500" 
                  />
                  <div class="absolute inset-0 bg-black opacity-0 group-hover:opacity-20 transition-opacity duration-300"></div>
                </div>
                <div class="bg-white p-3 border-t-2 border-black group-hover:bg-yellow-50 transition-colors duration-300">
                  <h3 class="text-2xl font-comic uppercase">{panel.title}</h3>
                </div>
              </div>
              <p class="text-2xl font-comic mt-4 panel-caption opacity-0 transform translate-y-4 transition-all duration-300">{panel.caption}</p>
            </div>
          </div>
        ))}
      </div>

      <!-- Visual Connection Elements -->
      <div class="hidden md:block relative w-full max-w-6xl mx-auto">
        <div class="absolute top-1/2 left-0 w-full -mt-32 z-0">
          <!-- Decorative Elements -->
          <div class="absolute left-1/3 -mt-4 transform -translate-x-1/2">
            <span class="inline-block text-4xl animate-bounce-horizontal">üëâ</span>
          </div>
          <div class="absolute left-2/3 -mt-4 transform -translate-x-1/2">
            <span class="inline-block text-4xl animate-bounce-horizontal" style="animation-delay: 0.2s">üëâ</span>
          </div>
        </div>
      </div>

      <div class="mt-32" data-scroll-animation="fade-up">
        <a href="#get-started" class="inline-block bg-yellow-400 border-4 border-black text-black text-2xl font-comic px-8 py-4 rounded-lg shadow-lg comic-button hover:scale-105 transition-all">
          GET THE BLUEPRINT
          <span class="ml-2 inline-block transform transition-transform group-hover:translate-x-1">‚Üí</span>
        </a>
      </div>
    </div>
  </div>
</section>

<style>
  @import url('https://fonts.googleapis.com/css2?family=Bangers&display=swap');

  .font-comic {
    font-family: 'Bangers', cursive;
    letter-spacing: 0.05em;
    line-height: 1.2;
  }

  .comic-panel {
    box-shadow: 5px 5px 0px rgba(0, 0, 0, 0.2);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
  }

  .comic-panel:hover {
    box-shadow: 8px 8px 0px rgba(0, 0, 0, 0.3);
    transform: translateY(-5px) scale(1.02);
  }

  .comic-panel::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: linear-gradient(45deg, #FFD700, transparent);
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: -1;
    border-radius: inherit;
  }

  .comic-panel:hover::before {
    opacity: 0.5;
  }

  .comic-button {
    position: relative;
    transition: all 0.3s ease;
    overflow: hidden;
  }

  .comic-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, transparent, rgba(255,255,255,0.3), transparent);
    transform: translateX(-100%);
    transition: transform 0.6s ease;
  }

  .comic-button:hover::before {
    transform: translateX(100%);
  }

  .comic-button:active {
    transform: translateY(2px);
    box-shadow: 2px 2px 0px rgba(0, 0, 0, 0.3);
  }

  .wave-emoji {
    animation: wave 2s infinite;
    transform-origin: 70% 70%;
    display: inline-block;
  }

  @keyframes wave {
    0% { transform: rotate(0deg); }
    10% { transform: rotate(14deg); }
    20% { transform: rotate(-8deg); }
    30% { transform: rotate(14deg); }
    40% { transform: rotate(-4deg); }
    50% { transform: rotate(10deg); }
    60% { transform: rotate(0deg); }
    100% { transform: rotate(0deg); }
  }

  .panel-container:hover .panel-caption {
    opacity: 1;
    transform: translateY(0);
  }

  .sound-effect {
    position: relative;
    display: inline-block;
  }

  .sound-effect::after {
    content: '';
    position: absolute;
    left: -10px;
    right: -10px;
    top: -10px;
    bottom: -10px;
    background: radial-gradient(circle at center, rgba(255,255,0,0.2) 0%, transparent 70%);
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: -1;
    pointer-events: none;
  }

  .comic-panel:hover .sound-effect::after {
    opacity: 1;
  }

  .comic-header {
    position: relative;
  }

  .comic-header::after {
    content: '';
    position: absolute;
    bottom: -5px;
    left: 0;
    width: 100%;
    height: 3px;
    background: black;
    transform: scaleX(0);
    transition: transform 0.3s ease;
    transform-origin: right;
  }

  .comic-header:hover::after {
    transform: scaleX(1);
    transform-origin: left;
  }

  @media (prefers-reduced-motion: reduce) {
    .wave-emoji,
    .animate-bounce-horizontal,
    .comic-button::before {
      animation: none;
    }
    
    .panel-container:hover .panel-caption {
      transition: none;
    }
  }

  @keyframes bounce-horizontal {
    0%, 100% { transform: translateX(0) rotate(0); }
    50% { transform: translateX(10px) rotate(0); }
  }

  .animate-bounce-horizontal {
    animation: bounce-horizontal 1s infinite;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const panels = document.querySelectorAll('.panel-container');
    
    // Panel hover effects
    panels.forEach((panel, index) => {
      panel.addEventListener('mouseenter', () => {
        const soundEffect = panel.querySelector('.sound-effect');
        if (soundEffect) {
          soundEffect.style.transform = 'scale(1.1)';
          setTimeout(() => {
            soundEffect.style.transform = 'scale(1)';
          }, 200);
        }
      });
    });

    // Intersection Observer for panel reveal
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.style.opacity = '1';
          entry.target.style.transform = 'translateY(0)';
          
          // For mobile devices, trigger hover effects
          if (window.innerWidth < 768) {
            const panel = entry.target;
            const soundEffect = panel.querySelector('.sound-effect');
            const caption = panel.querySelector('.panel-caption');
            
            // Trigger sound effect animation
            if (soundEffect) {
              soundEffect.style.transform = 'scale(1.1)';
              setTimeout(() => {
                soundEffect.style.transform = 'scale(1)';
              }, 200);
            }
            
            // Show caption
            if (caption) {
              caption.style.opacity = '1';
              caption.style.transform = 'translateY(0)';
            }
          }
        }
      });
    }, {
      threshold: 0.3
    });

    panels.forEach(panel => {
      panel.style.opacity = '0';
      panel.style.transform = 'translateY(20px)';
      panel.style.transition = 'opacity 0.5s ease, transform 0.5s ease';
      observer.observe(panel);
    });
  });
</script> 