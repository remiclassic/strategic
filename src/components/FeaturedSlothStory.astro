---
const story = {
    quote: "I had zero following, no idea what I was doing, and just turned my old freelance process into a PDF. First month: $118. Then $400. Now it's my rent. All from one lazy product.",
    author: "Taylor W.",
    role: "Former Social Media Manager",
    milestones: [
        { amount: "$118", label: "First Month" },
        { amount: "$400", label: "Second Month" },
        { amount: "$1,200+", label: "Current Monthly" }
    ]
};
---

<section class="relative py-24 overflow-hidden bg-gradient-to-br from-[#FFF7E6] via-[#FFFBF2] to-[#FFF7E6]">
    <!-- Background Elements -->
    <div class="absolute inset-0 bg-halftone opacity-5 pointer-events-none mix-blend-multiply animate-subtle-scale"></div>
    
    <!-- Decorative Elements -->
    <div class="absolute inset-0 overflow-hidden pointer-events-none">
        <div class="absolute top-10 left-10 text-6xl animate-float">ðŸ’­</div>
        <div class="absolute bottom-20 right-10 text-6xl animate-float" style="animation-delay: 1s">âœ¨</div>
    </div>

    <div class="container mx-auto px-4 relative z-10">
        <div class="max-w-4xl mx-auto">
            <!-- Header -->
            <div class="text-center mb-12 reveal-on-scroll">
                <div class="comic-bubble bg-white inline-block transform -rotate-2 mb-6 hover:rotate-2 transition-all duration-300">
                    <p class="text-xl font-bold relative inline-block">
                        <span class="relative z-10">Featured Sloth Story</span>
                    </p>
                </div>
            </div>

            <!-- Story Card -->
            <div class="comic-card bg-white p-8 md:p-12 relative group reveal-on-scroll">
                <!-- Sloth Badge -->
                <div class="absolute -top-6 -left-6 w-24 h-24 bg-[#FFD600] rounded-full flex items-center justify-center transform -rotate-12 border-4 border-black shadow-xl z-10 group-hover:rotate-12 transition-transform duration-500">
                    <span class="text-4xl transform group-hover:scale-110 transition-transform duration-500">ðŸ¦¥</span>
                </div>

                <!-- Quote -->
                <div class="relative pl-4 border-l-4 border-[#FFD600]">
                    <div class="absolute -left-3 top-0 text-6xl text-[#FFD600] opacity-30">"</div>
                    <p class="text-xl md:text-2xl mb-6 font-medium" style="font-family: 'Inter', system-ui, -apple-system, sans-serif;">
                        {story.quote}
                    </p>
                    <div class="flex items-center gap-3">
                        <div class="h-1 w-12 bg-[#FFD600]"></div>
                        <p class="font-bold text-lg" style="font-family: 'Inter', system-ui, -apple-system, sans-serif;">
                            {story.author}
                            <span class="text-gray-500 font-normal"> â€¢ {story.role}</span>
                        </p>
                    </div>
                </div>

                <!-- Progress Timeline -->
                <div class="mt-12 grid grid-cols-3 gap-4">
                    {story.milestones.map((milestone, index) => (
                        <div class="relative">
                            {index < story.milestones.length - 1 && (
                                <div class="absolute top-8 left-[60%] w-full h-0.5 bg-gray-200"></div>
                            )}
                            <div class="relative z-10 text-center group">
                                <div class="w-16 h-16 mx-auto bg-[#FFE066] rounded-full border-4 border-black flex items-center justify-center mb-2 transform group-hover:scale-110 group-hover:rotate-12 transition-all duration-300">
                                    <span class="font-bold text-lg">ðŸ’°</span>
                                </div>
                                <p class="font-bold text-xl mb-1" style="font-family: 'Inter', system-ui, -apple-system, sans-serif;">{milestone.amount}</p>
                                <p class="text-gray-600 text-sm">{milestone.label}</p>
                            </div>
                        </div>
                    ))}
                </div>
            </div>
        </div>
    </div>
</section>

<style>
    .comic-card {
        border: 4px solid black;
        border-radius: 16px;
        box-shadow: 8px 8px 0 rgba(0, 0, 0, 0.2);
        overflow: hidden;
        position: relative;
    }

    .comic-card:hover {
        box-shadow: 12px 12px 0 rgba(0, 0, 0, 0.15);
    }

    .comic-bubble {
        border: 4px solid black;
        border-radius: 12px;
        padding: 1rem 1.5rem;
        box-shadow: 4px 4px 0 rgba(0, 0, 0, 0.2);
    }

    .bg-halftone {
        background-image: radial-gradient(circle at center, black 1px, transparent 1px);
        background-size: 24px 24px;
        background-position: center;
    }

    @keyframes float {
        0%, 100% {
            transform: translateY(0) rotate(0deg);
        }
        50% {
            transform: translateY(-20px) rotate(5deg);
        }
    }

    .animate-float {
        animation: float 6s ease-in-out infinite;
    }

    @keyframes subtle-scale {
        0%, 100% {
            transform: scale(1) rotate(0deg);
            opacity: 0.05;
        }
        50% {
            transform: scale(1.1) rotate(1deg);
            opacity: 0.07;
        }
    }

    .animate-subtle-scale {
        animation: subtle-scale 15s ease-in-out infinite;
    }

    .reveal-on-scroll {
        opacity: 0;
        transform: translateY(20px);
        transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
    }

    .reveal-on-scroll.visible {
        opacity: 1;
        transform: translateY(0);
    }
</style>

<script>
    // Intersection Observer for scroll animations
    document.addEventListener('DOMContentLoaded', () => {
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('visible');
                }
            });
        }, {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        });

        // Observe all elements with animations
        document.querySelectorAll('.reveal-on-scroll').forEach(el => {
            observer.observe(el);
        });
    });
</script> 